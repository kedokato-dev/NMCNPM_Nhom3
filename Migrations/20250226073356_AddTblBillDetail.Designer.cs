// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NMCNPM_Nhom3.Models.Entities;

#nullable disable

namespace NMCNPM_Nhom3.Migrations
{
    [DbContext(typeof(NmcnpmContext))]
    [Migration("20250226073356_AddTblBillDetail")]
    partial class AddTblBillDetail
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NMCNPM_Nhom3.Models.Entities.TblAccount", b =>
                {
                    b.Property<int>("PkIdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkIdUser"));

                    b.Property<DateTime>("DDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("dDate");

                    b.Property<int>("FkIdPermission")
                        .HasColumnType("int")
                        .HasColumnName("FkIdPermission");

                    b.Property<string>("SAccountName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("sAccountName");

                    b.Property<string>("SPassword")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("sPassword");

                    b.Property<string>("SPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("sPhoneNumber");

                    b.Property<string>("SUserIdentification")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("sUserIdentification");

                    b.HasKey("PkIdUser")
                        .HasName("PK__tblAccou__35430B20B843047F");

                    b.HasIndex("FkIdPermission");

                    b.ToTable("tblAccount", (string)null);
                });

            modelBuilder.Entity("NMCNPM_Nhom3.Models.Entities.TblBike", b =>
                {
                    b.Property<int>("PkIdBike")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkIdBike"));

                    b.Property<double>("FDeposit")
                        .HasColumnType("float")
                        .HasColumnName("fDeposit");

                    b.Property<double>("FRentalPrice")
                        .HasColumnType("float")
                        .HasColumnName("fRentalPrice");

                    b.Property<int>("FkIdBikeDetail")
                        .HasColumnType("int");

                    b.Property<string>("SCondition")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("sCondition");

                    b.Property<string>("SImage")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("sImage");

                    b.Property<string>("SName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("sName");

                    b.Property<string>("SStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sStatus");

                    b.HasKey("PkIdBike")
                        .HasName("PK__tblBike__BEC4EBB72EA820EF");

                    b.HasIndex("FkIdBikeDetail");

                    b.ToTable("tblBike", (string)null);
                });

            modelBuilder.Entity("NMCNPM_Nhom3.Models.Entities.TblBikeBrand", b =>
                {
                    b.Property<int>("PkIdBikeBrand")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkIdBikeBrand"));

                    b.Property<string>("SName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("sName");

                    b.HasKey("PkIdBikeBrand")
                        .HasName("PK__tblBikeB__02E62FE1582632C6");

                    b.HasIndex(new[] { "SName" }, "UQ__tblBikeB__79DF5959CE8BA688")
                        .IsUnique();

                    b.ToTable("tblBikeBrand", (string)null);
                });

            modelBuilder.Entity("NMCNPM_Nhom3.Models.Entities.TblBikeDetail", b =>
                {
                    b.Property<int>("PkIdBikeDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkIdBikeDetail"));

                    b.Property<decimal>("FWeight")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("fWeight");

                    b.Property<int>("FkIdBikeBrand")
                        .HasColumnType("int");

                    b.Property<int>("FkIdBikeType")
                        .HasColumnType("int");

                    b.Property<string>("SFrameSize")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sFrameSize");

                    b.Property<string>("SMaterial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sMaterial");

                    b.HasKey("PkIdBikeDetail")
                        .HasName("PK__tblBikeD__9596CA93FF0BB9D9");

                    b.HasIndex("FkIdBikeBrand");

                    b.HasIndex("FkIdBikeType");

                    b.ToTable("tblBikeDetail", (string)null);
                });

            modelBuilder.Entity("NMCNPM_Nhom3.Models.Entities.TblBikeType", b =>
                {
                    b.Property<int>("PkIdBikeType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkIdBikeType"));

                    b.Property<string>("SType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("sType");

                    b.HasKey("PkIdBikeType")
                        .HasName("PK__tblBikeT__A92939E0508A3CCC");

                    b.HasIndex(new[] { "SType" }, "UQ__tblBikeT__47012A9151EFF243")
                        .IsUnique();

                    b.ToTable("tblBikeType", (string)null);
                });

            modelBuilder.Entity("NMCNPM_Nhom3.Models.Entities.TblBill", b =>
                {
                    b.Property<int>("PkBillCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkBillCode"));

                    b.Property<DateTime>("DBeginTime")
                        .HasColumnType("datetime")
                        .HasColumnName("dBeginTime");

                    b.Property<DateTime>("DEndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("dEndTime");

                    b.Property<double?>("FIncidentalCosts")
                        .HasColumnType("float")
                        .HasColumnName("fIncidentalCosts");

                    b.Property<int?>("IStatus")
                        .HasColumnType("int")
                        .HasColumnName("iStatus");

                    b.HasKey("PkBillCode")
                        .HasName("PK__tblBill__3E89B1B99B453D66");

                    b.ToTable("tblBill", (string)null);
                });

            modelBuilder.Entity("NMCNPM_Nhom3.Models.Entities.TblBillDetail", b =>
                {
                    b.Property<int>("FkIdBill")
                        .HasColumnType("int");

                    b.Property<int>("FkIdBike")
                        .HasColumnType("int");

                    b.HasKey("FkIdBill", "FkIdBike");

                    b.HasIndex("FkIdBike");

                    b.ToTable("TblBillDetail");
                });

            modelBuilder.Entity("NMCNPM_Nhom3.Models.Entities.TblCreateBill", b =>
                {
                    b.Property<int>("FkBillCode")
                        .HasColumnType("int");

                    b.Property<int>("FkIdUser")
                        .HasColumnType("int");

                    b.HasIndex("FkBillCode");

                    b.HasIndex("FkIdUser");

                    b.ToTable("tblCreateBill", (string)null);
                });

            modelBuilder.Entity("NMCNPM_Nhom3.Models.Entities.TblPermission", b =>
                {
                    b.Property<int>("PkIdPermission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkIdPermission"));

                    b.Property<string>("SPermissionn")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("sPermissionn");

                    b.HasKey("PkIdPermission")
                        .HasName("PK__tblPermi__DADB96523ACC3141");

                    b.ToTable("tblPermission", (string)null);
                });

            modelBuilder.Entity("TblBillDetail", b =>
                {
                    b.Property<int>("FkIdBill")
                        .HasColumnType("int");

                    b.Property<int>("FkIdBike")
                        .HasColumnType("int");

                    b.HasKey("FkIdBill", "FkIdBike")
                        .HasName("PK__tblBillD__D21248C9B5F86271");

                    b.HasIndex("FkIdBike");

                    b.ToTable("tblBillDetail", (string)null);
                });

            modelBuilder.Entity("NMCNPM_Nhom3.Models.Entities.TblAccount", b =>
                {
                    b.HasOne("NMCNPM_Nhom3.Models.Entities.TblPermission", "FkIdPermissionNavigation")
                        .WithMany("TblAccounts")
                        .HasForeignKey("FkIdPermission")
                        .IsRequired()
                        .HasConstraintName("FK_tblAccount_tblPermission");

                    b.Navigation("FkIdPermissionNavigation");
                });

            modelBuilder.Entity("NMCNPM_Nhom3.Models.Entities.TblBike", b =>
                {
                    b.HasOne("NMCNPM_Nhom3.Models.Entities.TblBikeDetail", "FkIdBikeDetailNavigation")
                        .WithMany("TblBikes")
                        .HasForeignKey("FkIdBikeDetail")
                        .IsRequired()
                        .HasConstraintName("fk_Bike_BikeDetail");

                    b.Navigation("FkIdBikeDetailNavigation");
                });

            modelBuilder.Entity("NMCNPM_Nhom3.Models.Entities.TblBikeDetail", b =>
                {
                    b.HasOne("NMCNPM_Nhom3.Models.Entities.TblBikeBrand", "FkIdBikeBrandNavigation")
                        .WithMany("TblBikeDetails")
                        .HasForeignKey("FkIdBikeBrand")
                        .IsRequired()
                        .HasConstraintName("fk_BikeDetail_BikeBrand");

                    b.HasOne("NMCNPM_Nhom3.Models.Entities.TblBikeType", "FkIdBikeTypeNavigation")
                        .WithMany("TblBikeDetails")
                        .HasForeignKey("FkIdBikeType")
                        .IsRequired()
                        .HasConstraintName("fk_BikeDetail_BikeType");

                    b.Navigation("FkIdBikeBrandNavigation");

                    b.Navigation("FkIdBikeTypeNavigation");
                });

            modelBuilder.Entity("NMCNPM_Nhom3.Models.Entities.TblBillDetail", b =>
                {
                    b.HasOne("NMCNPM_Nhom3.Models.Entities.TblBike", "FkIdBikeNavigation")
                        .WithMany("TblBillDetail")
                        .HasForeignKey("FkIdBike")
                        .IsRequired();

                    b.HasOne("NMCNPM_Nhom3.Models.Entities.TblBill", "FkIdBillNavigation")
                        .WithMany("TblBillDetail")
                        .HasForeignKey("FkIdBill")
                        .IsRequired();

                    b.Navigation("FkIdBikeNavigation");

                    b.Navigation("FkIdBillNavigation");
                });

            modelBuilder.Entity("NMCNPM_Nhom3.Models.Entities.TblCreateBill", b =>
                {
                    b.HasOne("NMCNPM_Nhom3.Models.Entities.TblBill", "FkBillCodeNavigation")
                        .WithMany()
                        .HasForeignKey("FkBillCode")
                        .IsRequired()
                        .HasConstraintName("fk_CreateBill_Bill");

                    b.HasOne("NMCNPM_Nhom3.Models.Entities.TblAccount", "FkIdUserNavigation")
                        .WithMany()
                        .HasForeignKey("FkIdUser")
                        .IsRequired()
                        .HasConstraintName("fk_CreateBill_User");

                    b.Navigation("FkBillCodeNavigation");

                    b.Navigation("FkIdUserNavigation");
                });

            modelBuilder.Entity("TblBillDetail", b =>
                {
                    b.HasOne("NMCNPM_Nhom3.Models.Entities.TblBike", null)
                        .WithMany()
                        .HasForeignKey("FkIdBike")
                        .IsRequired()
                        .HasConstraintName("fk_BillDetail_Bike");

                    b.HasOne("NMCNPM_Nhom3.Models.Entities.TblBill", null)
                        .WithMany()
                        .HasForeignKey("FkIdBill")
                        .IsRequired()
                        .HasConstraintName("fk_BillDetail_Bill");
                });

            modelBuilder.Entity("NMCNPM_Nhom3.Models.Entities.TblBike", b =>
                {
                    b.Navigation("TblBillDetail");
                });

            modelBuilder.Entity("NMCNPM_Nhom3.Models.Entities.TblBikeBrand", b =>
                {
                    b.Navigation("TblBikeDetails");
                });

            modelBuilder.Entity("NMCNPM_Nhom3.Models.Entities.TblBikeDetail", b =>
                {
                    b.Navigation("TblBikes");
                });

            modelBuilder.Entity("NMCNPM_Nhom3.Models.Entities.TblBikeType", b =>
                {
                    b.Navigation("TblBikeDetails");
                });

            modelBuilder.Entity("NMCNPM_Nhom3.Models.Entities.TblBill", b =>
                {
                    b.Navigation("TblBillDetail");
                });

            modelBuilder.Entity("NMCNPM_Nhom3.Models.Entities.TblPermission", b =>
                {
                    b.Navigation("TblAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
